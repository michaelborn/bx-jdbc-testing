import ortus.boxlang.runtime.BoxRuntime;
import ortus.boxlang.runtime.scopes.Key;

datasourceService = BoxRuntime.getInstance().getDataSourceService();
for( name in datasourceService.getNames() ){
	datasource = datasourceService.get( Key.of( name ) );
	writeOutput( '<h2>Datasource: #datasource.getUniqueName()#</h2>' );
	writeDump( datasource.getPoolStats() );
}


// variables.testDSN = "myDerby";
// variables.testDSN = "myMysql";
// variables.testDSN = "derby";
variables.testDSN = "mysql";
// variables.testDSN = "mariadb";
// variables.testDSN = "postgres";
// variables.testDSN = "mssql";
// variables.testDSN = "urlonly";

writeDump(
	var = datasourceService.getDriverNames(),
	label = "Registered drivers:"
);
writeDump(
	var = datasourceService.size(),
	label = "Total registered datasources:"
);
writeDump(
	var = datasourceService.getNames(),
	label = "Registered datasource names:"
);


/*
randomDS = datasourceService.get( Key.of( "bx_unamed_ef2bcb40-576d-4ba1-8c5e-db478630d977_300265895" ) );
writeDump( randomDS.getConfiguration() );
writeDump( randomDS.getConfiguration().toStruct() );
writeDump( randomDS.getConfiguration().properties );
writeDump( jsonSerialize( randomDS.getConfiguration().properties ) );
writeDump( hash( jsonSerialize( randomDS.getConfiguration().properties ) ) );
// writeDump( randomDS   );
*/

writeDump(
	queryExecute(
		"SELECT * FROM information_schema.PROCESSLIST;",
		[],
		{ datasource: variables.testDSN }
	)
);
/*
*/